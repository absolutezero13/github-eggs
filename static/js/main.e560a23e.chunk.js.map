{"version":3,"sources":["Context/Reducer.tsx","Context/GithubContext.tsx","Icons/search-pc.svg","Icons/repository.svg","Components/BookmarkedRepos.tsx","Components/MainSearchResults.tsx","Components/RepoDetailMain.tsx","Icons/repolink.svg","Icons/bookmarkblue.svg","Icons/bookmark.svg","Icons/watch.svg","Icons/star.svg","Icons/fork.svg","Icons/branches.svg","Icons/issues.svg","Icons/pullrequests.svg","Components/SideBarRepoDetails.tsx","Components/RepoDetails.tsx","Icons/repositories.svg","Icons/users.svg","Icons/bookmarkblack.svg","Components/SideBarSearchResults.tsx","Components/SideBarUserDetails.tsx","Components/UserDetailMain.tsx","Components/UserDetails.tsx","Components/UsersPage.tsx","Components/SearchResults.tsx","Components/MainSearchPage.tsx","Icons/logo.svg","Icons/search.svg","Components/Header.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["bookmarkedReposReducer","state","action","type","repo","filter","id","repos","GithubContext","createContext","GithubProvider","children","useState","setRepos","repoCount","setRepoCount","users","setUsers","userCount","setUserCount","isSearched","setSearchPageStatus","useReducer","bookmarkedRepos","dispatch","useEffect","JSON","parse","localStorage","getItem","console","log","Provider","value","searchEverything","input","length","fetch","then","res","json","data","total_count","items","deleteBookmarkedRepo","BookmarkedRepos","useContext","className","map","src","repositorySVG","alt","to","full_name","description","onClick","MainSearchResults","name","RepoDetailMain","setRepo","bookmarkedRepo","setBookmarkedRepo","find","e","SideBarRepoDetails","branchCount","setBranchCount","pullRequestCount","setPullRequestCount","isBookmarked","setBookmarkStatus","setItem","stringify","indexOf","owner","login","branches","repolinkSVG","watchSVG","watchers_count","starSVG","stargazers_count","forkSVG","forks_count","branchesSVG","issuesSVG","open_issues_count","pullrequestsSVG","bookmarkSVG","bookmarkblueSVG","RepoDetails","props","match","params","SideBarSearchResults","repositoriesSVG","usersSVG","bookmarkblackSVG","SideBarUserDetails","user","userDetails","avatar_url","html_url","UserDetailMain","userRepos","setUserRepos","svg","UserDetails","UsersPage","SearchResults","path","component","exact","MainSearchPage","Header","logo","searchSVG","onChange","target","placeholder","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e560a23e.chunk.js","sourcesContent":["export const bookmarkedReposReducer = (state: any, action: any) => {\r\n  switch (action.type) {\r\n    case \"ADD_BOOKMARKED\":\r\n      return [...state, action.repo];\r\n    case \"DELETE_BOOKMARKED\":\r\n      return state.filter((repo: any) => repo.id !== action.id);\r\n    case \"GET_BOOKMARKED_REPOS\":\r\n      return action.repos;\r\n  }\r\n};\r\n","import React, { createContext, useEffect, useState, useReducer } from \"react\";\r\nimport { bookmarkedReposReducer } from \"./Reducer\";\r\ntype contextType = {\r\n  repos: Array<object>;\r\n  users: any;\r\n  searchEverything: any;\r\n  repoCount: number;\r\n  userCount: number;\r\n  isSearched: boolean;\r\n  bookmarkedRepos: any;\r\n  dispatch: any;\r\n  deleteBookmarkedRepo: any;\r\n};\r\n\r\nexport const GithubContext = createContext<Partial<contextType>>({});\r\n\r\nconst GithubProvider: React.FC = ({ children }: any) => {\r\n  const [repos, setRepos] = useState();\r\n  const [repoCount, setRepoCount] = useState();\r\n  const [users, setUsers] = useState();\r\n  const [userCount, setUserCount] = useState();\r\n  const [isSearched, setSearchPageStatus] = useState(false);\r\n  const [bookmarkedRepos, dispatch] = useReducer(bookmarkedReposReducer, []);\r\n  useEffect(() => {\r\n    const repos = JSON.parse(localStorage.getItem(\"bookmarkedRepos\")!);\r\n    console.log(repos);\r\n    if (repos) {\r\n      dispatch({\r\n        type: \"GET_BOOKMARKED_REPOS\",\r\n        repos,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const searchEverything = (input: string) => {\r\n    if (input.length > 2) {\r\n      setSearchPageStatus(true);\r\n      fetch(`https://api.github.com/search/repositories?q=${input}`)\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setRepoCount(data.total_count);\r\n          setRepos(data.items);\r\n        });\r\n\r\n      fetch(`https://api.github.com/search/users?q=${input}`)\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setUserCount(data.total_count);\r\n          setUsers(data.items);\r\n        });\r\n    } else {\r\n      setSearchPageStatus(false);\r\n    }\r\n  };\r\n\r\n  const deleteBookmarkedRepo = (id: number) => {\r\n    dispatch({\r\n      type: \"DELETE_BOOKMARKED\",\r\n      id,\r\n    });\r\n  };\r\n  return (\r\n    <GithubContext.Provider\r\n      value={{\r\n        repos,\r\n        users,\r\n        searchEverything,\r\n        repoCount,\r\n        userCount,\r\n        isSearched,\r\n        bookmarkedRepos,\r\n        dispatch,\r\n        deleteBookmarkedRepo,\r\n      }}\r\n    >\r\n      {children}\r\n    </GithubContext.Provider>\r\n  );\r\n};\r\n\r\nexport default GithubProvider;\r\n","export default __webpack_public_path__ + \"static/media/search-pc.3aa4aa46.svg\";","export default __webpack_public_path__ + \"static/media/repository.763f1257.svg\";","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { GithubContext } from \"../Context/GithubContext\";\r\nimport repositorySVG from \"../Icons/repository.svg\";\r\nconst BookmarkedRepos: React.FC = () => {\r\n  const { bookmarkedRepos, dispatch, deleteBookmarkedRepo } = useContext(\r\n    GithubContext\r\n  );\r\n\r\n  console.log(bookmarkedRepos);\r\n  return (\r\n    <div className=\"main-search-results bookmarked-repos\">\r\n      <div className=\"main-search-results__repository-results\">\r\n        <div className=\"main-search-results__repository-results__title\">\r\n          <h2>\r\n            {bookmarkedRepos ? bookmarkedRepos.length : 0} Bookmarked Repository\r\n            Results\r\n          </h2>\r\n        </div>\r\n        {bookmarkedRepos &&\r\n          bookmarkedRepos.map((repo: any) => {\r\n            return (\r\n              <div\r\n                key={repo.id}\r\n                className=\"main-search-results__repository-results__result\"\r\n              >\r\n                <div className=\"main-search-results__repository-results__result__title\">\r\n                  <img src={repositorySVG} alt=\"repo\" />\r\n                  <Link to={`/repo-details/${repo.id}`}>\r\n                    <h4> {repo.full_name} </h4>\r\n                  </Link>\r\n                </div>\r\n                <p> {repo.description} </p>\r\n                <button\r\n                  className=\"button-delete\"\r\n                  onClick={() => deleteBookmarkedRepo(repo.id)}\r\n                >\r\n                  delete bookmark\r\n                </button>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookmarkedRepos;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { GithubContext } from \"../Context/GithubContext\";\r\nimport repositorySVG from \"../Icons/repository.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nconst MainSearchResults: React.FC = () => {\r\n  const { repos, repoCount } = useContext(GithubContext);\r\n\r\n  return (\r\n    <div className=\"main-search-results\">\r\n      <div className=\"main-search-results__repository-results\">\r\n        <div className=\"main-search-results__repository-results__title\">\r\n          <h2> {repoCount ?? 0} Repository Results</h2>\r\n        </div>\r\n\r\n        {repos &&\r\n          repos.map((repo: any) => {\r\n            return (\r\n              <div\r\n                key={repo.id}\r\n                className=\"main-search-results__repository-results__result\"\r\n              >\r\n                <div className=\"main-search-results__repository-results__result__title\">\r\n                  <img src={repositorySVG} alt=\"repo\" />\r\n                  <Link to={`/repo-details/${repo.id}`}>\r\n                    <h4>{repo.name}</h4>\r\n                  </Link>\r\n                </div>\r\n                <p>{repo.description}</p>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainSearchResults;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { GithubContext } from \"../Context/GithubContext\";\r\n\r\ninterface repoDetailMainProps {\r\n  id: number;\r\n}\r\nconst RepoDetailMain: React.FC<repoDetailMainProps> = ({ id }) => {\r\n  const { repos } = useContext(GithubContext)!;\r\n  const { bookmarkedRepos } = useContext(GithubContext)!;\r\n  const [repo, setRepo] = useState<any>();\r\n  const [bookmarkedRepo, setBookmarkedRepo] = useState<any>();\r\n  useEffect(() => {\r\n    const repo = repos?.find((e: any) => {\r\n      return e.id == id;\r\n    })!;\r\n    setRepo(repo);\r\n  }, []);\r\n  useEffect(() => {\r\n    const bookmarkedRepo = bookmarkedRepos?.find((e: any) => {\r\n      return e.id == id;\r\n    })!;\r\n    setBookmarkedRepo(bookmarkedRepo);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"repo-detail-main\">\r\n      {repo ? (\r\n        <p>{repo.description}</p>\r\n      ) : (\r\n        <p> {bookmarkedRepo && bookmarkedRepo.description} </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RepoDetailMain;\r\n","export default __webpack_public_path__ + \"static/media/repolink.3463bc29.svg\";","export default __webpack_public_path__ + \"static/media/bookmarkblue.9727142e.svg\";","export default __webpack_public_path__ + \"static/media/bookmark.116ece47.svg\";","export default __webpack_public_path__ + \"static/media/watch.0fc57707.svg\";","export default __webpack_public_path__ + \"static/media/star.efdbc6ca.svg\";","export default __webpack_public_path__ + \"static/media/fork.83c4dec2.svg\";","export default __webpack_public_path__ + \"static/media/branches.805eea9b.svg\";","export default __webpack_public_path__ + \"static/media/issues.950382de.svg\";","export default __webpack_public_path__ + \"static/media/pullrequests.66ee4e85.svg\";","import React, { useContext, useEffect, useState } from \"react\";\r\nimport repositorySVG from \"../Icons/repository.svg\";\r\nimport repolinkSVG from \"../Icons/repolink.svg\";\r\nimport bookmarkblueSVG from \"../Icons/bookmarkblue.svg\";\r\nimport bookmarkSVG from \"../Icons/bookmark.svg\";\r\nimport watchSVG from \"../Icons/watch.svg\";\r\nimport starSVG from \"../Icons/star.svg\";\r\nimport forkSVG from \"../Icons/fork.svg\";\r\nimport branchesSVG from \"../Icons/branches.svg\";\r\nimport issuesSVG from \"../Icons/issues.svg\";\r\nimport pullrequestsSVG from \"../Icons/pullrequests.svg\";\r\nimport { GithubContext } from \"../Context/GithubContext\";\r\nimport BookmarkedRepos from \"./BookmarkedRepos\";\r\n\r\ninterface SideBarRepoDetailsProps {\r\n  id: number;\r\n}\r\n\r\nconst SideBarRepoDetails: React.FC<SideBarRepoDetailsProps> = ({ id }) => {\r\n  const { repos } = useContext(GithubContext)!;\r\n  const [repo, setRepo] = useState<any>();\r\n  const [branchCount, setBranchCount] = useState();\r\n  const [pullRequestCount, setPullRequestCount] = useState();\r\n  const { bookmarkedRepos, dispatch, deleteBookmarkedRepo } = useContext(\r\n    GithubContext\r\n  );\r\n  const [bookmarkedRepo, setBookmarkedRepo] = useState<any>();\r\n  const [isBookmarked, setBookmarkStatus] = useState<boolean>();\r\n  useEffect(() => {\r\n    const repo = repos?.find((e: any) => {\r\n      return e.id == id;\r\n    })!;\r\n    setRepo(repo);\r\n  }, []);\r\n  useEffect(() => {\r\n    const bookmarkedRepo = bookmarkedRepos?.find((e: any) => {\r\n      return e.id == id;\r\n    })!;\r\n    setBookmarkedRepo(bookmarkedRepo);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (bookmarkedRepos) {\r\n      localStorage.setItem(\"bookmarkedRepos\", JSON.stringify(bookmarkedRepos));\r\n      if (bookmarkedRepos.indexOf(repo) !== -1) {\r\n        setBookmarkStatus(true);\r\n      } else {\r\n        setBookmarkStatus(false);\r\n      }\r\n    }\r\n  });\r\n  useEffect(() => {\r\n    if (repo) {\r\n      fetch(\r\n        `https://api.github.com/repos/${repo.owner.login}/${repo.name}/pulls`\r\n      )\r\n        .then((res) => res.json())\r\n        .then((branches) => setPullRequestCount(branches.length));\r\n      fetch(\r\n        `https://api.github.com/repos/${repo.owner.login}/${repo.name}/branches`\r\n      )\r\n        .then((res) => res.json())\r\n        .then((branches) => setBranchCount(branches.length));\r\n    }\r\n  }, []);\r\n  const addBookmarkedRepo = () => {\r\n    dispatch({\r\n      type: \"ADD_BOOKMARKED\",\r\n      repo,\r\n    });\r\n  };\r\n\r\n  console.log(bookmarkedRepo);\r\n\r\n  return (\r\n    <div className=\"repo-details-side-bar\">\r\n      {repo ? (\r\n        <div className=\"repo-details-side-bar__description\">\r\n          <img src={repositorySVG} alt=\"repo\" />\r\n          <h2> {repo.name} </h2>\r\n          <p>{repo.owner.login}</p>\r\n          <div className=\"repo-details-side-bar__description__repo-link\">\r\n            <img src={repolinkSVG} alt=\"repolink\" />\r\n            <p> {repo.name} </p>\r\n          </div>\r\n          <div className=\"repo-details-side-bar__quantity\">\r\n            <div className=\"repo-details-side-bar__quantity__watch\">\r\n              <img src={watchSVG} alt=\"svg\" /> <p className=\"text\">Watch</p>\r\n              <p className=\"count\">{repo.watchers_count}</p>\r\n            </div>\r\n            <div className=\"repo-details-side-bar__quantity__star\">\r\n              <img src={starSVG} alt=\"svg\" /> <p className=\"text\">Star</p>\r\n              <p className=\"count\">{repo.stargazers_count}</p>\r\n            </div>\r\n            <div className=\"repo-details-side-bar__quantity__fork\">\r\n              <img src={forkSVG} alt=\"svg\" /> <p className=\"text\">Fork</p>\r\n              <p className=\"count\">{repo.forks_count}</p>\r\n            </div>\r\n            <div className=\"repo-details-side-bar__quantity__branches\">\r\n              <img src={branchesSVG} alt=\"svg\" />\r\n              <p className=\"text\">Branches</p>\r\n              <p className=\"count\">{branchCount}</p>\r\n            </div>\r\n            <div className=\"repo-details-side-bar__quantity__issues\">\r\n              <img src={issuesSVG} alt=\"svg\" /> <p className=\"text\">Issues</p>\r\n              <p className=\"count\">{repo.open_issues_count}</p>\r\n            </div>\r\n            <div className=\"repo-details-side-bar__quantity__pull-requests\">\r\n              <img src={pullrequestsSVG} alt=\"svg\" />\r\n              <p className=\"text\">Pull Requests</p>\r\n              <p className=\"count\">{pullRequestCount}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <p>Loading</p>\r\n      )}\r\n      {isBookmarked ? (\r\n        <button\r\n          onClick={() => deleteBookmarkedRepo(repo.id)}\r\n          className=\"repo-details-side-bar__button button-delete\"\r\n        >\r\n          <img src={bookmarkSVG} alt=\"\" /> Delete From Bookmarks\r\n        </button>\r\n      ) : (\r\n        <button\r\n          onClick={addBookmarkedRepo}\r\n          className=\"repo-details-side-bar__button\"\r\n        >\r\n          <img src={bookmarkblueSVG} alt=\"\" /> Add to Bookmarks\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideBarRepoDetails;\r\n","import React from \"react\";\r\nimport RepoDetailMain from \"./RepoDetailMain\";\r\nimport SideBarRepoDetails from \"./SideBarRepoDetails\";\r\n\r\nconst RepoDetails = (props: any) => {\r\n  return (\r\n    <div className=\"repo-details\">\r\n      <SideBarRepoDetails id={props.match.params.id} />\r\n      <RepoDetailMain id={props.match.params.id} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RepoDetails;\r\n","export default __webpack_public_path__ + \"static/media/repositories.e82444e6.svg\";","export default __webpack_public_path__ + \"static/media/users.b3429583.svg\";","export default __webpack_public_path__ + \"static/media/bookmarkblack.466f48e7.svg\";","import React, { useContext, useEffect, useState } from \"react\";\r\nimport repositoriesSVG from \"../Icons/repositories.svg\";\r\nimport usersSVG from \"../Icons/users.svg\";\r\nimport bookmarkblackSVG from \"../Icons/bookmarkblack.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { GithubContext } from \"../Context/GithubContext\";\r\nconst SideBarSearchResults: React.FC = () => {\r\n  const { repoCount, userCount, bookmarkedRepos } = useContext(GithubContext);\r\n  return (\r\n    <div className=\"side-bar-search-results\">\r\n      <Link to=\"/\">\r\n        <div className=\"side-bar-search-results__repositories\">\r\n          <img src={repositoriesSVG} alt=\"repo\" />\r\n          <p className=\"result-title\">Repositories</p>\r\n          <p className=\"quantity\">{repoCount ?? 0}</p>\r\n        </div>\r\n      </Link>\r\n      <Link to=\"/search-users\">\r\n        <div className=\"side-bar-search-results__users\">\r\n          <img src={usersSVG} alt=\"users\" />\r\n          <p className=\"result-title\">Users</p>\r\n          <p className=\"quantity\">{userCount ?? 0}</p>\r\n        </div>\r\n      </Link>\r\n      <Link to=\"/search-bookmarks\">\r\n        <div className=\"side-bar-search-results__bookmarked \">\r\n          <img src={bookmarkblackSVG} alt=\"bookmarked\" />\r\n          <p className=\"result-title\">Bookmarked</p>\r\n          <p className=\"quantity\">\r\n            {\" \"}\r\n            {bookmarkedRepos && bookmarkedRepos.length}{\" \"}\r\n          </p>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideBarSearchResults;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { GithubContext } from \"../Context/GithubContext\";\r\nimport somesvg from \"../Icons/repolink.svg\";\r\n\r\ninterface SideBarUserDetailProps {\r\n  id: number;\r\n}\r\nconst SideBarUserDetails: React.FC<SideBarUserDetailProps> = ({ id }) => {\r\n  const { users } = useContext(GithubContext);\r\n  const user = users?.find((e: any) => {\r\n    return e.id == id;\r\n  });\r\n  const [userDetails] = useState(user);\r\n  const { avatar_url, login, html_url, type } = userDetails;\r\n\r\n  return (\r\n    <div className=\"side-bar-user-details\">\r\n      {userDetails && (\r\n        <div className=\"side-bar-user-details__user-information\">\r\n          <img src={avatar_url} alt=\"\" />\r\n          <h3>{login} </h3>\r\n          <p>{html_url}</p>\r\n          <p className=\"side-bar-user-details__user-information__desc\">\r\n            {type}\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideBarUserDetails;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { GithubContext } from \"../Context/GithubContext\";\r\nimport svg from \"../Icons/repository.svg\";\r\n\r\ninterface UserDetailMainProps {\r\n  id: number;\r\n}\r\n\r\nconst UserDetailMain: React.FC<UserDetailMainProps> = ({ id }) => {\r\n  const { users } = useContext(GithubContext);\r\n  const user = users?.find((e: any) => {\r\n    return e.id == id;\r\n  });\r\n  const [userDetails] = useState(user);\r\n  const [userRepos, setUserRepos] = useState<Array<object>>();\r\n\r\n  useEffect(() => {\r\n    fetch(`https://api.github.com/users/${userDetails.login}/repos`)\r\n      .then((res) => res.json())\r\n      .then((repos) => setUserRepos(repos));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"user-detail-main\">\r\n      {userRepos ? (\r\n        <div>\r\n          <div className=\"user-detail-main__title\">\r\n            <h3>Repositories </h3>\r\n            <div className=\"user-detail-main__title__number-box\">\r\n              {userRepos.length}\r\n            </div>\r\n          </div>\r\n          {userRepos.map((repo: any) => {\r\n            return (\r\n              <div key={repo.id} className=\"user-detail-main__repo\">\r\n                <div className=\"user-detail-main__repo__repo-title\">\r\n                  <img src={svg} alt=\"repo\" />\r\n                  <h4> {repo.name} </h4>\r\n                </div>\r\n                <p>{repo.description}</p>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      ) : (\r\n        <p>Loading..</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserDetailMain;\r\n","import React from \"react\";\r\nimport SideBarUserDetails from \"./SideBarUserDetails\";\r\nimport UserDetailMain from \"./UserDetailMain\";\r\n\r\nconst UserDetails: React.FC = (props: any) => {\r\n  return (\r\n    <div className=\"user-details\">\r\n      <SideBarUserDetails id={props.match.params.id} />\r\n      <UserDetailMain id={props.match.params.id} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserDetails;\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { GithubContext } from \"../Context/GithubContext\";\r\nconst UsersPage: React.FC = () => {\r\n  const { users, userCount } = useContext(GithubContext);\r\n  return (\r\n    <div className=\"main-search-results\">\r\n      <div className=\"main-search-results__repository-results\">\r\n        <div className=\"main-search-results__repository-results__title\">\r\n          <h2>{userCount ?? 0} User Results</h2>\r\n        </div>\r\n        {users &&\r\n          users.map((user: any) => {\r\n            return (\r\n              <div\r\n                key={user.id}\r\n                className=\"main-search-results__repository-results__result\"\r\n              >\r\n                <div className=\"main-search-results__repository-results__result__title\">\r\n                  <img\r\n                    className=\"user-picture\"\r\n                    src={user.avatar_url}\r\n                    alt=\"user\"\r\n                  />\r\n                  <Link to={`/user-details/${user.id}`}>\r\n                    <h4>{user.login}</h4>\r\n                  </Link>\r\n                </div>\r\n                <p>{user.type}</p>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UsersPage;\r\n","import React from \"react\";\r\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\r\nimport BookmarkedRepos from \"./BookmarkedRepos\";\r\nimport MainSearchResults from \"./MainSearchResults\";\r\nimport RepoDetails from \"./RepoDetails\";\r\nimport SideBarSearchResults from \"./SideBarSearchResults\";\r\nimport UserDetails from \"./UserDetails\";\r\nimport UsersPage from \"./UsersPage\";\r\n\r\nconst SearchResults: React.FC = () => {\r\n  return (\r\n    <div className=\"search-results\">\r\n      <Router>\r\n        <SideBarSearchResults />\r\n        <Switch>\r\n          <Route path=\"/user-details/:id\" component={UserDetails} />\r\n          <Route path=\"/repo-details/:id\" component={RepoDetails} />\r\n          <Route path=\"/search-bookmarks\" component={BookmarkedRepos} />\r\n          <Route path=\"/search-users\" component={UsersPage} />\r\n          <Route exact={true} path=\"/\" component={MainSearchResults} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResults;\r\n","import React, { useContext } from \"react\";\r\nimport { GithubContext } from \"../Context/GithubContext\";\r\nimport searchPc from \"../Icons/search-pc.svg\";\r\nimport SearchResults from \"./SearchResults\";\r\n\r\nconst MainSearchPage: React.FC = () => {\r\n  const { isSearched } = useContext(GithubContext);\r\n  return (\r\n    <div>\r\n      {true ? (\r\n        <SearchResults />\r\n      ) : (\r\n        <div className=\"blank-search-page\">\r\n          <div className=\"blank-search-page__items\">\r\n            <img src={searchPc} alt=\"search-pc\" />\r\n            <p>Search results will appear here</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainSearchPage;\r\n","export default __webpack_public_path__ + \"static/media/logo.ca9b8f0d.svg\";","export default __webpack_public_path__ + \"static/media/search.2cf3f7c5.svg\";","import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport logo from \"../Icons/logo.svg\";\r\nimport searchSVG from \"../Icons/search.svg\";\r\nimport bookmarkSVG from \"../Icons/bookmark.svg\";\r\nimport { GithubContext } from \"../Context/GithubContext\";\r\nconst Header: React.FC = () => {\r\n  const { searchEverything } = useContext(GithubContext);\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"logo\">\r\n        <img src={logo} alt=\"logo\" />\r\n      </div>\r\n      <div className=\"header__search\">\r\n        <img\r\n          src={searchSVG}\r\n          className=\"header__search__icon\"\r\n          alt=\"search-icon\"\r\n        />\r\n        <input\r\n          onChange={(e) => searchEverything(e.target.value)}\r\n          type=\"search\"\r\n          className=\"header__search__input\"\r\n          placeholder=\"Search...\"\r\n        />\r\n      </div>\r\n      <div className=\"header__bookmarks\">\r\n        <img\r\n          src={bookmarkSVG}\r\n          className=\"header__bookmark-icon\"\r\n          alt=\"bookmark-icon\"\r\n        />\r\n        <p>Bookmarks</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\nimport MainSearchPage from \"./Components/MainSearchPage\";\nimport Header from \"./Components/Header\";\nimport \"./Sass/main.scss\";\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Header />\n      <MainSearchPage />\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { createContext } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport GithubProvider from \"./Context/GithubContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <GithubProvider>\n      <App />\n    </GithubProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}